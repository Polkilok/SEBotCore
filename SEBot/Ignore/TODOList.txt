1) сделать более "умное" логгирование:
+	- возможность указать, данные от каких классов сохранять
+	* возможность на лету вывести лог для отдельного класса
	* возможность на лету вывести лог на отдельный LCD
2) оптимизация 
+	- создание кеша данных
+	- изменение способов расчета полей
+		~ Максимальная сила учитывает гравитацию
+		~ Изменение расчета инерции // выкинуть корявый хеш проекции + сделать 2 альтернативы - понижение скорости и уклонение
+		~ Изменение расчета сопротивления "орбитингу"
+		~ Изменение опсной зоны - игнорировать движение со скоростью, меньше заданной
+	- удаление глобальных переменных (Ship и GlobalEventManager)
2.out)
	- OrbitingResistForce - неправильная работа (резки выбросы при прямой траектории), заменено на SimpleOrbitingResistForce
	- Изменение расчета инерции 
			// сделать 2 альтернативы - понижение скорости и уклонение
	- Изменение опсной зоны - игнорировать движение со скоростью, меньше заданной
	- Максимальная сила учитывает гравитацию
	- удаление глобальных переменных (Ship и GlobalEventManager)
`3) Сериализация
	- сериализация всего стека задач
	- сериализация состояния api
4) модульность API
	- запускается на голом корабле
5) Определение препятствий и их обход
	- определение препятствий
	- улучшенный метод ПП - теперь корабль разворачивается к цели
5.1)
	- OrbitingResistForce - неправильная работа (резки выбросы при прямой траектории), заменено на SimpleOrbitingResistForce
	- Изменение расчета инерции 
			// сделать 2 альтернативы - понижение скорости и уклонение
	- Изменение опсной зоны - игнорировать движение со скоростью, меньше заданной
	- Максимальная сила учитывает гравитацию
	- удаление глобальных переменных (Ship и GlobalEventManager)
6) Взаимодействие через антенны
	- поиск точки для стыковки
	- потенциал для добавления произвольных запросов и их обработки
7) Работа с инвентарем
	- список предметов у себя в инвентаре
	- взять предметы из другого инвентаря (все, или как минимум по 1 уникальному ресурсу)
	* сортировка ресурсов
	* выбрасывание хлама через коннектор (ручным контроллем)
8) Ремон и разборка по запросу
	- создание задачи по внешнему подтверждению с тайм-аутом
	- создание определяемых извне позиций
	- ремонт:
		~ позиция недостроенных блоков
		~ требуемые материалы на восстановление
	- разборка
		~ разборка начиная с внешних блоков
		* учет соединений блоков
		! не разбирать забинженный таймер
9) логгирование:
	- сохранение остаточной информации в окне вывода информации